{"version":3,"sources":["Components/Header/SiteLogo.js","Components/Header/NavBar.js","actions/index.js","Components/Header/LoginButton.js","Components/Header/index.js","Components/TaskList/TaskPaneButtons.js","Components/TaskList/TrashPaneButtons.js","Components/TaskList/taskPaneTemplate.js","actions/sortUtils.js","Components/TaskList/ListOptions/SortAndFilter.js","Components/TaskList/ListOptions/TagOptions.js","Components/TaskList/ListOptions/ShowAllButton.js","Components/TaskList/ListOptions/index.js","Components/TaskList/listTemplate.js","Components/NotFound.js","Components/UpdateTask/updateTaskTemplate.js","Components/TagEditor/AddTag.js","Components/TagEditor/index.js","Components/Login/index.js","Components/ErrorMessage/formValidation.js","Components/Login/SignUp.js","Components/Error404.js","App.js","reducers/manageTasks.js","reducers/manageTrash.js","reducers/manageTags.js","reducers/filterImportant.js","reducers/filterTags.js","reducers/sortOptions.js","reducers/showTags.js","reducers/manageLogin.js","reducers/showAll.js","reducers/useTagColors.js","reducers/index.js","index.js"],"names":["SiteLogo","to","as","inverted","Subheader","style","fontSize","headerLinks","iconName","labelName","navLinkURL","NavBar","Menu","icon","secondary","map","hLink","key","Item","name","link","Icon","navBarOnlyIconsStyling","display","justifyContent","margin","NavBarOnlyIcons","color","size","actionTypeObj","typeDesc","type","sortByNewest","sortByOldest","sortByABC","sortByTags","toggleImportant","toggleTagVisibility","toggleLogin","toggleShowAll","toggleTagColors","createSlug","title","trim","toLowerCase","replace","updateTask","newTask","oldSlug","task","removeTrash","connect","loggedIn","dispatch","props","Button","border","onClick","Header","borderless","borderRadius","Container","fitted","position","className","top","zIndex","TaskButtons","showTags","moveToTrash","removeTask","updateTrash","List","slug","circular","TrashButtons","restoreTrash","taskPaneTemplate","ButtonType","Grid","textAlign","columns","container","Row","Column","floated","date","month","getMonth","day","getDate","year","getFullYear","formatDate","created","content","tags","length","tag","Label","reduxConnect","TaskPane","TaskPaneButtons","TrashPane","TrashPaneButtons","applySorting","tasks","sortAction","Rsort","a","b","localeCompare","tagNames","tasksWithTags","filter","tasksWithoutTags","sortedTasks","flatMap","tagName","SortAndFilterButtons","Dropdown","pointing","text","scrolling","value","label","empty","active","filterTags","includes","updateTagFilter","Divider","filterImportant","mapStateToProps","mapDispatchToProps","TaskSortButtons","TrashSortButtons","useTagColors","showAll","listOptionsTemplate","SortButtons","taskType","pageTitle","paneType","listOptions","trashType","semanticColors","red","orange","yellow","olive","green","teal","blue","violet","purple","pink","brown","grey","black","listTemplate","listType","state","activeIndex","handleClick","e","titleProps","index","newIndex","setState","this","sortOptions","filteredTasks","onlyImportant","filteredTags","find","applyTagFilter","onlyShowImportant","important","applyImportantFilter","filterVisibility","panels","tagColor","Accordion","styled","fluid","panel","i","Title","backgroundColor","width","Content","Component","TaskList","TrashList","trash","NotFound","window","location","pathname","noPostFound","updateTaskTemplate","updateFormat","updateTitle","target","updateContent","updateTags","currentTag","updatedTags","showTagLimit","updateImportant","onSubmit","preventDefault","Date","createTask","redirect","x","match","params","editSlug","bind","titleSlug","titleAlreadyUsed","some","validContent","Form","minWidth","Field","onChange","placeholder","basic","TextArea","rows","lineHeight","Checkbox","slider","checked","multiple","simple","item","compact","disabled","buttonWording","AddTaskUC","EditTaskUC","AddTask","EditTask","colorOptions","AddTag","updateName","visibility","updateColor","createTag","tagNameAlreadyUsed","stackable","Transition","visible","animation","duration","Input","options","selection","removeTag","centered","alignItems","horizontal","signUpContainerStyle","formStyle","flexDirection","padding","centerSpacing","Login","updateUsername","username","updatePassword","password","from","nothingEntered","inline","hidden","correctLength","max","min","textLength","PassValidationIcon","FailValidationIcon","SignUp2","updateEmail","email","updateConfirmPassword","confirmPassword","passwordLongEnough","passwordIncludesSpecChars","passwordUpperAndLower","upperFound","test","lowerFound","confirmUpperAndLowerCase","passwordsMatch","allPassing","marginBottom","Error404","exact","PrivateRoute","component","rest","render","path","TagEditor","SignUp","initialState","manageTasks","action","foundAt","findIndex","slice","concat","manageTrash","manageTags","currentlyListed","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5523965c.chunk.js","sourcesContent":["import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\n\nconst SiteLogo = () => (\n  <NavLink to=\"/\">\n    <Header as=\"h1\" inverted>\n      2daloo\n      <Header.Subheader style={{ fontSize: '1.1rem' }}>\n        daily task planner\n      </Header.Subheader>\n    </Header>\n  </NavLink>\n);\n\nexport default SiteLogo;\n","import React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\n\nconst headerLinks = [\n  {\n    iconName: 'tasks',\n    labelName: 'Tasks',\n    navLinkURL: '/'\n  },\n  {\n    iconName: 'plus',\n    labelName: 'Add',\n    navLinkURL: '/add'\n  },\n  {\n    iconName: 'tags',\n    labelName: 'Tags',\n    navLinkURL: '/tags'\n  },\n  {\n    iconName: 'trash alternate',\n    labelName: 'Trash',\n    navLinkURL: '/trash'\n  }\n];\n\nexport const NavBar = () => (\n  <Menu icon=\"labeled\" secondary>\n    {headerLinks.map((hLink) => (\n      <NavLink\n        to={hLink.navLinkURL}\n        key={`main-navbar-${hLink.iconName}`}\n      >\n        <Menu.Item name={hLink.iconName} link>\n          <Icon name={hLink.iconName} />\n          {hLink.labelName}\n        </Menu.Item>\n      </NavLink>\n    ))}\n  </Menu>\n);\n\nconst navBarOnlyIconsStyling = {\n  display: 'flex',\n  justifyContent: 'space-evenly',\n  margin: 0\n};\n\nexport const NavBarOnlyIcons = () => (\n  <Menu\n    color=\"blue\"\n    inverted\n    icon\n    secondary\n    style={navBarOnlyIconsStyling}\n  >\n    {headerLinks.map((hLink) => (\n      <NavLink\n        to={hLink.navLinkURL}\n        key={`mobile-navbar-${hLink.iconName}`}\n      >\n        <Menu.Item name={hLink.iconName} link>\n          <Icon\n            style={{ color: '#ffffff' }}\n            name={hLink.iconName}\n            size=\"large\"\n          />\n        </Menu.Item>\n      </NavLink>\n    ))}\n  </Menu>\n);\n","// Action Types\nexport const SORT_BY_NEWEST = 'SORT_BY_NEWEST';\nexport const SORT_BY_OLDEST = 'SORT_BY_OLDEST';\nexport const SORT_BY_ABC = 'SORT_BY_ABC';\nexport const SORT_BY_TAGS = 'SORT_BY_TAGS';\n\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const REMOVE_TASK = 'REMOVE_TASK';\n\nexport const UPDATE_TRASH = 'UPDATE_TRASH';\nexport const REMOVE_TRASH = 'REMOVE_TRASH';\n\nexport const CREATE_TAG = 'CREATE_TAG';\nexport const REMOVE_TAG = 'REMOVE_TAG';\n\nexport const TOGGLE_IMPORTANT = 'TOGGLE_IMPORTANT';\n\nexport const UPDATE_TAG_FILTER = 'UPDATE_TAG_FILTER';\n\nexport const TOGGLE_TAG_VISIBILITY = 'TOGGLE_TAG_VISIBILITY';\n\nexport const TOGGLE_LOGIN = 'TOGGLE_LOGIN';\n\nexport const TOGGLE_SHOW_ALL = 'TOGGLE_SHOW_ALL';\n\nexport const TOGGLE_TAG_COLORS = 'TOGGLE_TAG_COLORS';\n\n// Action Creators\n\nconst actionTypeObj = (typeDesc) => ({ type: typeDesc });\nexport const sortByNewest = actionTypeObj(SORT_BY_NEWEST);\nexport const sortByOldest = actionTypeObj(SORT_BY_OLDEST);\nexport const sortByABC = actionTypeObj(SORT_BY_ABC);\nexport const sortByTags = actionTypeObj(SORT_BY_TAGS);\n\nexport const toggleImportant = actionTypeObj(TOGGLE_IMPORTANT);\nexport const toggleTagVisibility = actionTypeObj(\n  TOGGLE_TAG_VISIBILITY\n);\nexport const toggleLogin = actionTypeObj(TOGGLE_LOGIN);\nexport const toggleShowAll = actionTypeObj(TOGGLE_SHOW_ALL);\nexport const toggleTagColors = actionTypeObj(TOGGLE_TAG_COLORS);\n\nexport const createSlug = (title) =>\n  title.trim().toLowerCase().replace(/,/g, '').replace(/ /g, '-');\n\nexport const formatDate = (date) => {\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return `${month}/${day}/${year}`;\n};\n\n// creates task object which is then passed to updateTask dispatch\nexport const createTask = (title, content, important, tags) => ({\n  title,\n  content,\n  important,\n  tags,\n  created: new Date(),\n  slug: createSlug(title)\n});\n\n// apply visibility filters to list of tasks\nconst applyImportantFilter = (tasks, onlyShowImportant) => {\n  if (onlyShowImportant) {\n    return tasks.filter((task) => task.important);\n  } else {\n    return tasks;\n  }\n};\n\nconst applyTagFilter = (tasks, filteredTags) => {\n  if (filteredTags.length === 0) {\n    return tasks;\n  } else {\n    return tasks.filter((task) =>\n      task.tags.find((tag) => filteredTags.includes(tag.name))\n    );\n  }\n};\n\nexport const filterVisibility = (\n  tasks,\n  onlyImportant,\n  filteredTags\n) => {\n  const filteredForImportant = applyImportantFilter(\n    tasks,\n    onlyImportant\n  );\n  const filteredForTags = applyTagFilter(\n    filteredForImportant,\n    filteredTags\n  );\n  return filteredForTags;\n};\n\nexport const updateTask = (newTask, oldSlug = null) => ({\n  type: UPDATE_TASK,\n  task: newTask,\n  oldSlug\n});\n\nexport const removeTask = (task) => ({\n  type: REMOVE_TASK,\n  task\n});\n\nexport const updateTrash = (task) => ({\n  type: UPDATE_TRASH,\n  task\n});\n\nexport const removeTrash = (task) => ({\n  type: REMOVE_TRASH,\n  task\n});\n\nexport function moveToTrash(task) {\n  return function (dispatch) {\n    dispatch(removeTask(task));\n    dispatch(updateTrash(task));\n  };\n}\n\nexport function restoreTrash(task) {\n  return function (dispatch) {\n    dispatch(removeTrash(task));\n    dispatch(updateTask(task));\n  };\n}\n\nexport const createTag = (tag) => ({\n  type: CREATE_TAG,\n  tag\n});\n\nexport const removeTag = (tag) => ({\n  type: REMOVE_TAG,\n  tag\n});\n\nexport const updateTagFilter = (tagName) => ({\n  type: UPDATE_TAG_FILTER,\n  tagName\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\n\nimport { toggleLogin } from '../../actions';\n\nconst LoginButton = (props) => {\n  if (props.loggedIn) {\n    return (\n      <Button\n        color=\"blue\"\n        style={{\n          border: '.12em solid #ffffff'\n        }}\n        onClick={props.toggleLogin}\n      >\n        Logout\n      </Button>\n    );\n  } else {\n    return (\n      <NavLink to=\"/login\">\n        <Button\n          color=\"blue\"\n          style={{\n            border: '.12em solid #ffffff'\n          }}\n        >\n          Login\n        </Button>\n      </NavLink>\n    );\n  }\n};\n\nconst mapStateToProps = ({ loggedIn }) => ({ loggedIn });\nconst mapDispatchToProps = (dispatch) => ({\n  toggleLogin: () => dispatch(toggleLogin)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginButton);\n","import React from 'react';\n\nimport SiteLogo from './SiteLogo';\nimport { NavBar, NavBarOnlyIcons } from './NavBar';\nimport LoginButton from './LoginButton';\n\nimport { Menu, Container } from 'semantic-ui-react';\n\nimport './index.css';\n\nconst Header = () => (\n  <>\n    <Menu\n      borderless\n      color=\"blue\"\n      inverted\n      style={{ borderRadius: 0, margin: 0 }}\n    >\n      <Container>\n        <Menu.Item fitted=\"vertically\" position=\"left\">\n          <SiteLogo />\n        </Menu.Item>\n        <div className=\"NavBar\">\n          <Menu.Item>\n            <NavBar />\n          </Menu.Item>\n        </div>\n\n        <Menu.Item position=\"right\">\n          <LoginButton />\n        </Menu.Item>\n      </Container>\n    </Menu>\n\n    <div\n      className=\"NBOI-container\"\n      style={{ position: 'sticky', top: -1, zIndex: 999 }}\n    >\n      <div className=\"NavBarOnlyIcons\">\n        <NavBarOnlyIcons />\n      </div>\n    </div>\n  </>\n);\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Icon, List } from 'semantic-ui-react';\nimport { moveToTrash, toggleTagVisibility } from '../../actions';\n\nconst TaskButtonsUC = (props) => (\n  <List key=\"task-button-list\">\n    <NavLink to={`/edit/${props.task.slug}`}>\n      <Icon\n        link\n        key=\"task-buttons-edit\"\n        name=\"edit outline\"\n        circular\n        color=\"orange\"\n        inverted\n      />\n    </NavLink>\n    <Icon\n      link\n      key=\"task-buttons-tag\"\n      name=\"tag\"\n      circular\n      color={props.showTags ? 'teal' : 'grey'}\n      inverted\n      onClick={props.toggleTagVisibility}\n    />\n    <Icon\n      link\n      key=\"task-buttons-delete\"\n      name=\"delete\"\n      circular\n      color=\"red\"\n      inverted\n      onClick={() => props.moveToTrash(props.task)}\n    />\n  </List>\n);\n\nconst mapStateToProps = ({ showTags }) => ({ showTags });\nconst mapDispatchToProps = (dispatch) => ({\n  moveToTrash: (task) => dispatch(moveToTrash(task)),\n  toggleTagVisibility: () => dispatch(toggleTagVisibility)\n});\n\nconst TaskButtons = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskButtonsUC);\n\nexport default TaskButtons;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { List, Icon } from 'semantic-ui-react';\nimport {\n  restoreTrash,\n  removeTrash,\n  toggleTagVisibility\n} from '../../actions';\n\nconst TrashButtonsUC = (props) => (\n  <List key=\"trash-button-list\">\n    <Icon\n      link\n      key=\"trash-buttons-undo\"\n      name=\"undo\"\n      circular\n      color=\"orange\"\n      inverted\n      onClick={() => props.restoreTrash(props.task)}\n    />\n    <Icon\n      link\n      key=\"trash-buttons-tag\"\n      name=\"tag\"\n      circular\n      color={props.showTags ? 'teal' : 'grey'}\n      inverted\n      onClick={props.toggleTagVisibility}\n    />\n    <Icon\n      link\n      key=\"trah-buttons-eraser\"\n      name=\"eraser\"\n      circular\n      color=\"red\"\n      inverted\n      onClick={() => props.removeTrash(props.task)}\n    />\n  </List>\n);\n\nconst mapStateToProps = ({ showTags }) => ({ showTags });\nconst mapDispatchToProps = (dispatch) => ({\n  restoreTrash: (task) => dispatch(restoreTrash(task)),\n  removeTrash: (task) => dispatch(removeTrash(task)),\n  toggleTagVisibility: () => dispatch(toggleTagVisibility)\n});\n\nconst TrashButtons = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrashButtonsUC);\n\nexport default TrashButtons;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport TaskPaneButtons from './TaskPaneButtons';\nimport TrashPaneButtons from './TrashPaneButtons';\n\nimport { formatDate } from '../../actions';\n\nimport { Grid, Header, Label } from 'semantic-ui-react';\n\nconst taskPaneTemplate = (ButtonType) => (props) => (\n  <article className=\"task-pane\">\n    <Grid textAlign=\"center\" columns=\"equal\" container>\n      <Grid.Row>\n        <Grid.Column floated=\"left\">\n          <Header as=\"h3\">{formatDate(props.task.created)}</Header>\n        </Grid.Column>\n        <Grid.Column floated=\"right\">\n          <ButtonType task={props.task} className=\"task-buttons\" />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row textAlign=\"center\">\n        <Header as=\"h3\">{props.task.content}</Header>\n      </Grid.Row>\n      {props.showTags && props.task.tags.length > 0 && (\n        <Grid.Row>\n          {props.task.tags.map((tag) => (\n            <Grid.Column\n              key={`${props.task.title}-tag-label${tag.name}`}\n            >\n              <Label tag color={tag.color}>\n                {tag.name}\n              </Label>\n            </Grid.Column>\n          ))}\n        </Grid.Row>\n      )}\n    </Grid>\n  </article>\n);\n\nconst mapStateToProps = ({ tags, showTags }) => ({ tags, showTags });\nconst reduxConnect = connect(mapStateToProps, null);\n\nconst TaskPane = reduxConnect(taskPaneTemplate(TaskPaneButtons));\nconst TrashPane = reduxConnect(taskPaneTemplate(TrashPaneButtons));\n\nexport { TaskPane, TrashPane };\n","import {\n  SORT_BY_NEWEST,\n  SORT_BY_OLDEST,\n  SORT_BY_ABC,\n  SORT_BY_TAGS\n} from './index';\nimport { sort as Rsort } from 'ramda';\n\n// The sorting function below is modeled on redux and takes the tasks or trash items and sorts them according to the sortAction provided\n// this acts as an intermediary between the sortOptions, tasks, and trash state\nconst applySorting = (tasks, tags, sortAction) => {\n  switch (sortAction) {\n    case SORT_BY_NEWEST:\n      return Rsort((a, b) => b.created - a.created, tasks);\n    case SORT_BY_OLDEST:\n      return Rsort((a, b) => a.created - b.created, tasks);\n    case SORT_BY_ABC:\n      return Rsort((a, b) => a.title.localeCompare(b.title), tasks);\n    case SORT_BY_TAGS:\n      const tagNames = tags.map((tag) => tag.name);\n      const tasksWithTags = tasks.filter(\n        (task) => task.tags.length > 0\n      );\n      const tasksWithoutTags = tasks.filter(\n        (task) => task.tags.length === 0\n      );\n      const sortedTasks = tagNames.flatMap((tagName) =>\n        tasksWithTags.filter((task) => task.tags[0].name === tagName)\n      );\n\n      return [...sortedTasks, ...tasksWithoutTags];\n    default:\n      return tasks;\n  }\n};\n\nexport default applySorting;\n","// show abc sort, date sort, important filter, category filter\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown, Icon } from 'semantic-ui-react';\n\nimport './index.css';\n\nimport {\n  sortByNewest,\n  sortByOldest,\n  sortByABC,\n  sortByTags,\n  updateTagFilter,\n  toggleImportant\n} from '../../../actions';\n\nconst SortAndFilterButtons = (props) => (\n  <Dropdown\n    className=\"list-options-item\"\n    pointing\n    text=\"sort and filter\"\n  >\n    <Dropdown.Menu>\n      <Dropdown.Header>Sort</Dropdown.Header>\n      <Dropdown.Item\n        icon=\"sort alphabet down\"\n        text=\"A to Z\"\n        onClick={props.sortByABC}\n      />\n      <Dropdown.Item\n        icon=\"sort numeric down\"\n        text=\"Newest\"\n        onClick={props.sortByNewest}\n      />\n      <Dropdown.Item\n        icon=\"sort numeric up\"\n        text=\"Oldest\"\n        onClick={props.sortByOldest}\n      />\n      <Dropdown.Item\n        icon=\"tags\"\n        text=\"Tag groups\"\n        onClick={props.sortByTags}\n      />\n      {props.tags.length > 0 && (\n        <Dropdown.Menu scrolling>\n          <Dropdown.Header>Filter Tags</Dropdown.Header>\n          {props.tags.map((tag) => (\n            <Dropdown.Item\n              key={tag.name}\n              value={tag.name}\n              text={tag.name}\n              label={{\n                color: tag.color,\n                empty: true,\n                circular: true\n              }}\n              active={props.filterTags.includes(tag.name)}\n              onClick={() => props.updateTagFilter(tag.name)}\n            />\n          ))}\n        </Dropdown.Menu>\n      )}\n\n      <Dropdown.Divider />\n      <Dropdown.Header>Important</Dropdown.Header>\n      <Dropdown.Item onClick={props.toggleImportant}>\n        {\n          <Icon\n            name=\"exclamation\"\n            inverted\n            color={props.filterImportant ? 'black' : 'red'}\n          />\n        }\n        {props.filterImportant ? 'unfocus' : 'focus'}\n      </Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n);\n\nconst mapStateToProps = ({ tags, filterImportant, filterTags }) => ({\n  tags,\n  filterImportant,\n  filterTags\n});\nconst mapDispatchToProps = (dispatch) => ({\n  sortByABC: () => dispatch(sortByABC),\n  sortByNewest: () => dispatch(sortByNewest),\n  sortByOldest: () => dispatch(sortByOldest),\n  sortByTags: () => dispatch(sortByTags),\n  toggleImportant: () => dispatch(toggleImportant),\n  updateTagFilter: (tagName) => dispatch(updateTagFilter(tagName))\n});\n\nexport const TaskSortButtons = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SortAndFilterButtons);\nexport const TrashSortButtons = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SortAndFilterButtons);\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport './index.css';\n\nimport {\n  toggleTagVisibility,\n  toggleTagColors\n} from '../../../actions';\n\nconst TagOptions = (props) => (\n  <Dropdown className=\"list-options-item\" text=\"display tags\">\n    <Dropdown.Menu>\n      <Dropdown.Item\n        text={props.showTags ? 'hide tags' : 'show tags'}\n        //icon={}\n        onClick={props.toggleTagVisibility}\n        active={!props.showTags}\n      />\n      <Dropdown.Item\n        text={\n          props.useTagColors ? 'remove tag colors' : 'use tag colors'\n        }\n        //icon={}\n        onClick={props.toggleTagColors}\n        active={!props.useTagColors}\n      />\n    </Dropdown.Menu>\n  </Dropdown>\n);\n\nconst mapStateToProps = ({ showTags, useTagColors }) => ({\n  showTags,\n  useTagColors\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleTagVisibility: () => dispatch(toggleTagVisibility),\n  toggleTagColors: () => dispatch(toggleTagColors)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TagOptions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './index.css';\n\nimport { toggleShowAll } from '../../../actions';\n\nconst ShowAllButton = (props) => (\n  <p className=\"list-options-item\" onClick={props.toggleShowAll}>\n    {props.showAll ? 'collapse' : 'show all'}\n  </p>\n);\n\nconst mapStateToProps = ({ showAll }) => ({ showAll });\nconst mapDispatchToProps = (dispatch) => ({\n  toggleShowAll: () => dispatch(toggleShowAll)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowAllButton);\n","import React from 'react';\n\nimport { TaskSortButtons, TrashSortButtons } from './SortAndFilter';\nimport TagOptions from './TagOptions';\nimport ShowAllButton from './ShowAllButton';\n\nimport './index.css';\n\nconst listOptionsTemplate = (SortButtons) => () => (\n  <div className=\"list-options-container\">\n    <ShowAllButton />\n    <TagOptions />\n    <SortButtons />\n  </div>\n);\n\nexport const TaskOptions = listOptionsTemplate(TaskSortButtons);\nexport const TrashOptions = listOptionsTemplate(TrashSortButtons);\n","import React, { Component } from 'react';\nimport {\n  Accordion,\n  Header,\n  Icon,\n  Container,\n  Grid\n} from 'semantic-ui-react';\nimport { TaskPane, TrashPane } from './taskPaneTemplate';\nimport { connect } from 'react-redux';\nimport './ListOptions/index.css';\n\nimport { filterVisibility, toggleShowAll } from '../../actions';\nimport applySorting from '../../actions/sortUtils';\n\nimport { TaskOptions, TrashOptions } from './ListOptions';\n\nconst taskType = {\n  pageTitle: 'Remaining:',\n  paneType: TaskPane,\n  listOptions: TaskOptions\n};\n\nconst trashType = {\n  pageTitle: 'Completed:',\n  paneType: TrashPane,\n  listOptions: TrashOptions\n};\n\nconst semanticColors = {\n  red: '#db2828',\n  orange: '#f2711c',\n  yellow: '#fbbd08',\n  olive: '#b5cc18',\n  green: '#21ba45',\n  teal: '#00b5ad',\n  blue: '#2185d0',\n  violet: '#6435c9',\n  purple: '#a333c8',\n  pink: '#e03997',\n  brown: '#a5673f',\n  grey: '#767676',\n  black: '#1b1c1d'\n};\n\nconst listTemplate = (listType) => {\n  return class extends Component {\n    state = { activeIndex: 0 };\n\n    handleClick = (e, titleProps) => {\n      const { index } = titleProps;\n      const { activeIndex } = this.state;\n      const newIndex = activeIndex === index ? -1 : index;\n\n      this.setState({ activeIndex: newIndex });\n      if (this.props.showAll) {\n        this.props.toggleShowAll();\n      }\n    };\n\n    render() {\n      const {\n        tasks,\n        tags,\n        filterImportant,\n        filterTags,\n        sortOptions\n      } = this.props;\n      const filteredTasks = filterVisibility(\n        tasks,\n        filterImportant,\n        filterTags\n      );\n      const sortedTasks = applySorting(\n        filteredTasks,\n        tags,\n        sortOptions\n      );\n      const panels = sortedTasks.map((task) => ({\n        key: task.slug,\n        title: task.title,\n        important: task.important,\n        tagColor:\n          task.tags.length > 0\n            ? semanticColors[task.tags[0].color]\n            : semanticColors['blue'],\n        content: {\n          content: <listType.paneType task={task} />\n        }\n      }));\n\n      const { activeIndex } = this.state;\n\n      return (\n        <main>\n          <Container>\n            <div className=\"accordion-header\">\n              <div>\n                <h1\n                  style={{\n                    color: semanticColors['blue']\n                  }}\n                >\n                  {listType.pageTitle}\n                </h1>\n              </div>\n              <listType.listOptions />\n            </div>\n\n            <Accordion styled inverted fluid>\n              {panels.map((panel, i) => (\n                <div key={`panel-for-${panel.title}`}>\n                  <Accordion.Title\n                    style={{\n                      backgroundColor: this.props.useTagColors\n                        ? panel.tagColor\n                        : semanticColors['blue']\n                    }}\n                    active={this.props.showAll || activeIndex === i}\n                    index={i}\n                    onClick={this.handleClick}\n                  >\n                    <Grid container columns=\"equal\">\n                      <Grid.Column textAlign=\"left\">\n                        <Icon name=\"dropdown\" />\n                      </Grid.Column>\n                      <Grid.Column width={10}>\n                        <Header as=\"h2\" inverted>\n                          {panel.title}\n                        </Header>\n                      </Grid.Column>\n                      <Grid.Column textAlign=\"right\">\n                        {panel.important && (\n                          <Icon\n                            name=\"exclamation\"\n                            circular\n                            inverted\n                            color={\n                              panel.tagColor ===\n                                semanticColors['red'] &&\n                              this.props.useTagColors\n                                ? 'grey'\n                                : 'red'\n                            }\n                          />\n                        )}\n                      </Grid.Column>\n                    </Grid>\n                  </Accordion.Title>\n                  <Accordion.Content\n                    active={this.props.showAll || activeIndex === i}\n                  >\n                    {panel.content.content}\n                  </Accordion.Content>\n                </div>\n              ))}\n            </Accordion>\n          </Container>\n        </main>\n      );\n    }\n  };\n};\n\nconst mapTasksState = ({\n  tasks,\n  tags,\n  filterImportant,\n  filterTags,\n  sortOptions,\n  showAll,\n  useTagColors\n}) => ({\n  tasks,\n  tags,\n  filterImportant,\n  filterTags,\n  sortOptions,\n  showAll,\n  useTagColors\n});\nconst mapTrashState = ({\n  trash,\n  tags,\n  filterImportant,\n  filterTags,\n  sortOptions,\n  showAll,\n  useTagColors\n}) => ({\n  tasks: trash,\n  tags,\n  filterImportant,\n  filterTags,\n  sortOptions,\n  showAll,\n  useTagColors\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleShowAll: () => dispatch(toggleShowAll)\n});\n\nexport const TaskList = connect(\n  mapTasksState,\n  mapDispatchToProps\n)(listTemplate(taskType));\nexport const TrashList = connect(\n  mapTrashState,\n  mapDispatchToProps\n)(listTemplate(trashType));\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NotFound = () => (\n  <div>\n    <p>\n      <b>Uh oh!</b> No page was found at '{window.location.pathname}'\n      - click here to return <NavLink to=\"/\">Home</NavLink>\n    </p>\n  </div>\n);\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {\n  Form,\n  Container,\n  Checkbox,\n  Dropdown,\n  Grid,\n  TextArea,\n  Icon,\n  Label\n} from 'semantic-ui-react';\n\nimport NotFound from '../NotFound';\nimport { updateTask, createTask, createSlug } from '../../actions';\n\n// empty post provided when creating new posts\nconst emptyPost = {\n  slug: '',\n  title: '',\n  content: '',\n  tags: [],\n  important: false\n};\n\nconst noPostFound = {\n  slug: null,\n  title: null,\n  content: null,\n  tags: null,\n  important: null\n};\n\n// formats used to create differing Add/Edit forms from template\nconst addTaskFormat = {\n  pageTitle: 'Add New Task',\n  buttonWording: 'Add',\n  newTask: emptyPost\n};\n\nconst editTaskFormat = {\n  pageTitle: 'Edit Task',\n  buttonWording: 'Update',\n  newTask: false\n};\n\nconst updateTaskTemplate = (updateFormat) => {\n  return class extends Component {\n    constructor(props) {\n      // use new task form, find current task to edit, or reject with wrong url\n\n      super(props);\n      this.task =\n        updateFormat.newTask ||\n        props.tasks.find(\n          (x) => x.slug === props.match.params.editSlug\n        ) ||\n        noPostFound;\n\n      this.state = {\n        title: this.task.title,\n        content: this.task.content,\n        tags: this.task.tags,\n        important: this.task.important,\n        showTagLimit: false,\n        redirect: false\n      };\n      this.updateTitle = this.updateTitle.bind(this);\n      this.updateContent = this.updateContent.bind(this);\n      this.updateTags = this.updateTags.bind(this);\n      this.updateImportant = this.updateImportant.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    updateTitle = (e) => this.setState({ title: e.target.value });\n    updateContent = (e) => this.setState({ content: e.target.value });\n    updateTags = (currentTag) => {\n      const tagNames = this.state.tags.map((tag) => tag.name);\n\n      if (tagNames.includes(currentTag.name)) {\n        const updatedTags = this.state.tags.filter(\n          (tag) => tag.name !== currentTag.name\n        );\n        this.setState({ tags: updatedTags, showTagLimit: false });\n      } else if (this.state.tags.length === 3) {\n        this.setState({ showTagLimit: true });\n      } else {\n        const updatedTags = [...this.state.tags, currentTag];\n        this.setState({ tags: updatedTags });\n      }\n    };\n    updateImportant = () =>\n      this.setState((state) => ({ important: !state.important }));\n    onSubmit = (e) => {\n      e.preventDefault();\n      const { title, content, important, tags } = this.state;\n      const newTask = createTask(title, content, important, tags);\n      this.props.updateTask(newTask, this.task.slug);\n      this.setState({ redirect: true });\n    };\n\n    render() {\n      if (this.state.redirect) {\n        return <Redirect to=\"/\" />;\n      }\n      if (this.state.title === null) {\n        return <NotFound />;\n      }\n\n      const tags = this.props.tags;\n\n      const { title, content } = this.state;\n      const { tasks, trash } = this.props;\n\n      // check for same title used if not editing previous task\n      const titleSlug = createSlug(title);\n      const sameTitleFromEditing = titleSlug === this.task.slug;\n      const titleAlreadyUsed =\n        !sameTitleFromEditing &&\n        (tasks.some((x) => x.slug === titleSlug) ||\n          trash.some((x) => x.slug === titleSlug));\n      const validContent =\n        title.length > 0 && content.length > 0 && !titleAlreadyUsed;\n\n      return (\n        <Container text textAlign=\"left\">\n          <Form\n            onSubmit={this.onSubmit}\n            title={updateFormat.pageTitle}\n          >\n            {this.state.tags.length > 0 && (\n              <Container\n                textAlign=\"right\"\n                //style={{ paddingTop: '1em' }}\n              >\n                {this.state.tags.map((tag) => (\n                  <Label\n                    color={tag.color}\n                    tag\n                    style={{\n                      minWidth: '8em',\n                      margin: '1em 1em 0em 1em'\n                    }}\n                    //size=\"big\"\n                  >\n                    <div style={{ textAlign: 'center' }}>\n                      {tag.name}\n                    </div>\n                  </Label>\n                ))}\n              </Container>\n            )}\n            <Form.Field>\n              <label style={{ color: '#2185d0', fontSize: '1.2em' }}>\n                Title\n              </label>\n              <input\n                onChange={this.updateTitle}\n                value={this.state.title}\n                placeholder=\"...\"\n              ></input>\n              {titleAlreadyUsed && (\n                <Label basic color=\"red\" pointing>\n                  The title `{this.state.title}` has already been used\n                  in another post!\n                </Label>\n              )}\n            </Form.Field>\n\n            <Form.Field>\n              <label style={{ color: '#2185d0', fontSize: '1.2em' }}>\n                Content\n              </label>\n              <TextArea\n                placeholder=\"...\"\n                rows={4}\n                value={this.state.content}\n                onChange={this.updateContent}\n              />\n            </Form.Field>\n\n            <Grid columns=\"equal\">\n              <Grid.Column>\n                <Form.Field>\n                  <Icon\n                    name=\"exclamation circle\"\n                    color={this.state.important ? 'red' : 'grey'}\n                    style={{\n                      fontSize: '2.6em',\n                      lineHeight: '1'\n                    }}\n                    onClick={this.updateImportant}\n                  />\n                  <Checkbox\n                    slider\n                    checked={this.state.important}\n                    onChange={this.updateImportant}\n                  />\n                </Form.Field>\n              </Grid.Column>\n\n              <Grid.Column />\n\n              <Grid.Column textAlign=\"right\">\n                <Form.Field>\n                  <Dropdown\n                    text=\"Tags\"\n                    multiple\n                    scrolling\n                    simple\n                    basic\n                    style={{ minWidth: '7em', fontSize: '1.2em' }}\n                  >\n                    <Dropdown.Menu>\n                      {tags.map((tag) => (\n                        <Dropdown.Item\n                          key={tag.name}\n                          text={tag.name}\n                          value={tag.name}\n                          label={{\n                            color: tag.color,\n                            empty: true,\n                            circular: true\n                          }}\n                          onClick={() => this.updateTags(tag)}\n                          active={this.state.tags.some(\n                            (item) => item.name === tag.name\n                          )}\n                        />\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Form.Field>\n              </Grid.Column>\n            </Grid>\n            {this.state.showTagLimit && (\n              <div\n                style={{ display: 'flex', justifyContent: 'center' }}\n              >\n                <Label basic color=\"red\" pointing>\n                  Only 3 tags may be applied per task!\n                </Label>\n              </div>\n            )}\n\n            <Container textAlign=\"center\">\n              <br />\n              <Form.Button\n                compact\n                size=\"massive\"\n                color=\"blue\"\n                disabled={!validContent}\n              >\n                {updateFormat.buttonWording}\n              </Form.Button>\n            </Container>\n          </Form>\n        </Container>\n      );\n    }\n  };\n};\n\n// create Add and Edit forms, unconnected (\"UC\") to redux store\nconst AddTaskUC = updateTaskTemplate(addTaskFormat);\nconst EditTaskUC = updateTaskTemplate(editTaskFormat);\n\n// map out redux connections\nconst mapStateToProps = ({ tasks, trash, tags }) => ({\n  tasks,\n  trash,\n  tags\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateTask: (newTask, oldSlug) =>\n    dispatch(updateTask(newTask, oldSlug))\n});\nconst reduxConnect = connect(mapStateToProps, mapDispatchToProps);\n\n// export connected Add/ Edit forms\nexport const AddTask = reduxConnect(AddTaskUC);\nexport const EditTask = reduxConnect(EditTaskUC);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Dropdown,\n  Grid,\n  Transition,\n  Label\n} from 'semantic-ui-react';\n\nimport { createTag } from '../../actions';\n\nconst semanticColors = [\n  'red',\n  'orange',\n  'yellow',\n  'olive',\n  'green',\n  'teal',\n  'blue',\n  'violet',\n  'purple',\n  'pink',\n  'brown',\n  'grey',\n  'black'\n];\n\nconst colorOptions = semanticColors.map((color) => ({\n  key: color,\n  text: color,\n  value: color,\n  icon: {\n    name: 'circle',\n    color: color\n  }\n}));\n\nclass AddTag extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      color: '',\n      visibility: true\n    };\n    this.updateName = this.updateName.bind(this);\n    this.updateColor = this.updateColor.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  updateName = (e) => {\n    if (e.target.value.length > 10) {\n      this.setState((state) => ({ visibility: !state.visibility }));\n    } else {\n      this.setState({ name: e.target.value });\n    }\n  };\n  updateColor = (e, { value }) => this.setState({ color: value });\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { name, color } = this.state;\n    this.props.createTag({ name, color });\n    this.setState({\n      name: '',\n      color: ''\n    });\n  };\n\n  render() {\n    const tagNameAlreadyUsed = this.props.tags.some(\n      (x) => x.name === this.state.name\n    );\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Grid stackable columns={3}>\n          {tagNameAlreadyUsed && (\n            <Label basic color=\"red\" pointing=\"down\">\n              The tag name `{this.state.name}` has already been used!\n            </Label>\n          )}\n          <Grid.Column>\n            <Transition\n              visible={this.state.visibility}\n              animation=\"shake\"\n              duration={300}\n            >\n              <Form.Input\n                onChange={this.updateName}\n                placeholder=\"tag name\"\n                value={this.state.name}\n              />\n            </Transition>\n          </Grid.Column>\n\n          <Grid.Column>\n            <Form.Field>\n              <Dropdown\n                onChange={this.updateColor}\n                options={colorOptions}\n                placeholder=\"choose a color\"\n                selection\n                value={this.state.color}\n              />\n            </Form.Field>\n          </Grid.Column>\n          <Grid.Column>\n            <Form.Button\n              type=\"submit\"\n              content=\"add\"\n              color=\"blue\"\n              disabled={\n                this.state.name.length === 0 || tagNameAlreadyUsed\n              }\n            />\n          </Grid.Column>\n        </Grid>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ tags }) => ({ tags });\nconst mapDispatchToProps = (dispatch) => ({\n  createTag: (tag) => dispatch(createTag(tag))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTag);\n","import React from 'react';\nimport {\n  Header,\n  Label,\n  Divider,\n  Grid,\n  Icon\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nimport { removeTag } from '../../actions';\nimport AddTag from './AddTag';\n\nimport './index.css';\n\nconst TagEditor = (props) => (\n  <Grid centered container>\n    <Grid.Row>\n      <Header as=\"h2\" color=\"blue\">\n        Tags\n      </Header>\n    </Grid.Row>\n\n    {props.tags.map((tag) => (\n      <Grid.Row>\n        <Label\n          color={tag.color}\n          tag\n          style={{ minWidth: '8em' }}\n          size=\"big\"\n        >\n          <div style={{ textAlign: 'center' }}>{tag.name}</div>\n        </Label>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <Icon\n            link\n            name=\"x\"\n            size=\"big\"\n            className=\"remove-icon\"\n            onClick={() => props.removeTag(tag)}\n          />\n        </div>\n      </Grid.Row>\n    ))}\n    <Grid.Row>\n      <Divider horizontal>\n        <div style={{ color: '#2185d0' }}>Add New Tag</div>\n      </Divider>\n    </Grid.Row>\n\n    <Grid.Row>\n      <AddTag />\n    </Grid.Row>\n  </Grid>\n);\n\nconst mapStateToProps = ({ tags }) => ({ tags });\nconst mapDispatchToProps = (dispatch) => ({\n  removeTag: (tag) => dispatch(removeTag(tag))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TagEditor);\n","import React, { Component } from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Button, Input, Divider } from 'semantic-ui-react';\nimport { toggleLogin } from '../../actions';\n\nconst signUpContainerStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  textAlign: 'center'\n};\n\nconst formStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  border: '.2em solid #2185d0',\n  borderRadius: '.5em',\n  padding: '1em',\n  minWidth: '300px'\n};\n\nconst centerSpacing = {\n  textAlign: 'center'\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      redirect: false\n    };\n    this.updateUsername = this.updateUsername.bind(this);\n    this.updatePassword = this.updatePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  updateUsername = (e) => this.setState({ username: e.target.value });\n  updatePassword = (e) => this.setState({ password: e.target.value });\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.toggleLogin();\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      const { from } = this.props.location.state || {\n        from: { pathname: '/' }\n      };\n      return <Redirect to={from} />;\n    }\n\n    const { username, password } = this.state;\n    const nothingEntered =\n      username.length === 0 || password.length === 0;\n    return (\n      <div style={signUpContainerStyle}>\n        <Form size=\"mini\" onSubmit={this.onSubmit} style={formStyle}>\n          <Form.Field inline>\n            <Input\n              label={{ content: 'Username', color: 'blue' }}\n              placeholder=\"...\"\n              onChange={this.updateUsername}\n            />\n          </Form.Field>\n          <Form.Field inline>\n            <Input\n              label={{ content: 'Password', color: 'blue' }}\n              placeholder=\"...\"\n              onChange={this.updatePassword}\n              type=\"password\"\n            />\n          </Form.Field>\n          <div style={centerSpacing}>\n            <Button\n              compact\n              size=\"big\"\n              color=\"blue\"\n              disabled={nothingEntered}\n            >\n              Go!\n            </Button>\n          </div>\n\n          <Divider hidden />\n          <p>\n            Forgot username/password? Click{' '}\n            <NavLink to=\"/forgot-password\">here</NavLink>\n          </p>\n          <p>\n            New user?{' '}\n            <NavLink to=\"/sign-up\">Create an account</NavLink>\n          </p>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleLogin: () => dispatch(toggleLogin)\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","const correctLength = (max, min = 0) => (text) => {\n  const textLength = text.length;\n  return textLength >= min && textLength <= max;\n};\n\nexport const checkTitleLength = correctLength(50, 1);\nexport const checkContentLength = correctLength(300, 1);\nexport const checkTagNameLength = correctLength(25, 1);\nexport const checkTagDescriptionLength = correctLength(25);\n\nexport const confirmUnique = (newTitle, titleList) => {\n  const duplicateFound = titleList.some(\n    (title) => title === newTitle\n  );\n  return !duplicateFound;\n};\n\nexport const confirmSpecialCharacter = (text) =>\n  text.match(/[!@#$%&*?]/);\nexport const confirmUpperAndLowerCase = (text) => {\n  const upperFound = /[A-Z]/.test(text);\n  const lowerFound = /[a-z]/.test(text);\n  return upperFound && lowerFound;\n};\nexport const confirmNumberIncluded = (text) => text.match(/[0-9]/);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { toggleLogin } from '../../actions';\nimport {\n  Form,\n  Label,\n  Header,\n  List,\n  Icon,\n  Divider\n} from 'semantic-ui-react';\nimport {\n  confirmSpecialCharacter,\n  confirmUpperAndLowerCase\n} from '../ErrorMessage/formValidation';\n\nconst PassValidationIcon = () => (\n  <Icon name=\"check circle outline\" color=\"green\" />\n);\nconst FailValidationIcon = () => <Icon name=\"x\" color=\"red\" />;\n\nconst signUpContainerStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  textAlign: 'left'\n};\n\nconst formStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  border: '.2em solid #2185d0',\n  borderRadius: '.5em',\n  padding: '1em',\n  minWidth: '300px'\n};\n\nconst centerSpacing = {\n  textAlign: 'center'\n};\n\nclass SignUp2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      redirect: false\n    };\n    this.updateEmail = this.updateEmail.bind(this);\n    this.updateUsername = this.updateUsername.bind(this);\n    this.updatePassword = this.updatePassword.bind(this);\n    this.updateConfirmPassword = this.updateConfirmPassword.bind(\n      this\n    );\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  updateEmail = (e) => this.setState({ email: e.target.value });\n  updateUsername = (e) => this.setState({ username: e.target.value });\n  updatePassword = (e) => this.setState({ password: e.target.value });\n  updateConfirmPassword = (e) =>\n    this.setState({ confirmPassword: e.target.value });\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.toggleLogin();\n    this.setState({ redirect: true });\n    /* In a full-stack app, this would communicate with the backend \n        before returning to the home page */\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const { email, username, password, confirmPassword } = this.state;\n    const passwordLongEnough = password.length > 7;\n    const passwordIncludesSpecChars = confirmSpecialCharacter(\n      password\n    );\n    const passwordUpperAndLower = confirmUpperAndLowerCase(password);\n    const passwordsMatch =\n      password === confirmPassword && password.length > 0;\n    const allPassing =\n      passwordLongEnough &&\n      passwordIncludesSpecChars &&\n      passwordUpperAndLower &&\n      passwordsMatch &&\n      email.length > 0 &&\n      username.length > 0;\n\n    return (\n      <div style={signUpContainerStyle}>\n        <Form style={formStyle} onSubmit={this.onSubmit}>\n          <Label fluid color=\"blue\" style={{ marginBottom: '2em' }}>\n            <Header inverted as=\"h2\" style={centerSpacing}>\n              Sign-Up\n            </Header>\n          </Label>\n          <br />\n\n          <Form.Field>\n            <label style={{ color: '#2185d0' }}>Email</label>\n            <input placeholder=\"...\" onChange={this.updateEmail} />\n          </Form.Field>\n          <Form.Field>\n            <label style={{ color: '#2185d0' }}>Username</label>\n            <input placeholder=\"...\" onChange={this.updateUsername} />\n          </Form.Field>\n\n          <Divider hidden></Divider>\n\n          <Form.Field>\n            <label style={{ color: '#2185d0' }}>Password</label>\n            <input\n              placeholder=\"...\"\n              onChange={this.updatePassword}\n              type=\"password\"\n            />\n          </Form.Field>\n          <Form.Field>\n            <label style={{ color: '#2185d0' }}>\n              Confirm Password\n            </label>\n            <input\n              placeholder=\"...\"\n              onChange={this.updateConfirmPassword}\n              type=\"password\"\n            />\n          </Form.Field>\n\n          <List>\n            <List.Item>\n              {passwordLongEnough ? (\n                <PassValidationIcon />\n              ) : (\n                <FailValidationIcon />\n              )}\n              at least 8 characters long\n            </List.Item>\n            <List.Item>\n              {passwordUpperAndLower ? (\n                <PassValidationIcon />\n              ) : (\n                <FailValidationIcon />\n              )}\n              upper and lower case\n            </List.Item>\n            <List.Item>\n              {passwordIncludesSpecChars ? (\n                <PassValidationIcon />\n              ) : (\n                <FailValidationIcon />\n              )}\n              special character - Ex: !@#$%&*?\n            </List.Item>\n            <List.Item>\n              {passwordsMatch ? (\n                <PassValidationIcon />\n              ) : (\n                <FailValidationIcon />\n              )}\n              passwords match\n            </List.Item>\n          </List>\n\n          <div style={centerSpacing}>\n            <Form.Button\n              color=\"blue\"\n              size=\"big\"\n              disabled={!allPassing}\n              type=\"submit\"\n            >\n              Submit\n            </Form.Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleLogin: () => dispatch(toggleLogin)\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp2);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Error404 = ({ location }) => (\n  <div>\n    <h3>Whoops!</h3>\n    <p>\n      There is no page at '{location.pathname}' - Click here to return{' '}\n      <NavLink exact to=\"/\">\n        Home\n      </NavLink>\n    </p>\n  </div>\n);\n\nexport default Error404;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Header from './Components/Header';\nimport {\n  TaskList,\n  TrashList\n} from './Components/TaskList/listTemplate';\nimport {\n  AddTask,\n  EditTask\n} from './Components/UpdateTask/updateTaskTemplate';\nimport TagEditor from './Components/TagEditor';\nimport Login from './Components/Login';\nimport SignUp from './Components/Login/SignUp';\nimport Error404 from './Components/Error404';\n\n// create wrapper to verify signed in before rendering component\n// or redirecting to login page\nconst PrivateRouteUC = ({\n  component: Component,\n  loggedIn,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst mapLoginToProps = ({ loggedIn }) => ({ loggedIn });\nconst PrivateRoute = connect(mapLoginToProps, null)(PrivateRouteUC);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <br />\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={TaskList} />\n        <PrivateRoute exact path=\"/add\" component={AddTask} />\n        <PrivateRoute path=\"/edit/:editSlug\" component={EditTask} />\n        <PrivateRoute exact path=\"/tags\" component={TagEditor} />\n        <PrivateRoute exact path=\"/trash\" component={TrashList} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/sign-up\" component={SignUp} />\n        <Route exact path=\"/forgot-password\" component={SignUp} />\n        <Route component={Error404} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ tasks, trash }) => ({ tasks, trash });\nexport default connect(mapStateToProps, null)(App);\n","import { UPDATE_TASK, REMOVE_TASK } from '../actions';\n/*\nconst immReverse = (arr, newArr=[]) => {\n    if (arr.length === 0) {\n        return newArr\n    }; \n    return immReverse(arr.slice(1),[arr[0],...newArr]);\n};\n*/\n\nconst initialState = [\n  {\n    title: 'React Architecture',\n    content:\n      'Use React for declarative, component-based architecture with JSX',\n    created: new Date('2020-02-29T17:37:46.248Z'),\n    slug: 'react-architecture',\n    tags: [],\n    important: true\n  },\n  {\n    title: 'Connect to Redux',\n    content:\n      'Use Redux to manage state decoupled from components, avoiding the need for prop drilling',\n    created: new Date('2020-02-28T17:37:46.248Z'),\n    slug: 'connect-to-redux',\n    tags: [{ name: 'redux', color: 'red' }],\n    important: true\n  },\n  {\n    title: 'React-Router for SPA Views',\n    content:\n      'Use React-Router to intuitively design SPA views within a <Switch> component rendering while maintaining traditional url paths',\n    created: new Date('2020-02-21T17:37:46.248Z'),\n    slug: 'react-router-for-spa-views',\n    tags: [],\n    important: true\n  },\n\n  {\n    title: 'Semantic UI',\n    content:\n      'Utilize Semantic UI to efficiently create clean, stylized views and allow developers to focus on core application logic',\n    created: new Date('2020-02-20T17:35:21.449Z'),\n    slug: 'semantic-ui',\n    tags: [{ name: 'UI-library', color: 'blue' }],\n    important: false\n  },\n  {\n    title: 'Redux Tooling',\n    content:\n      'Use various redux tooling, such as devtools extension and redux thunk, to expand upon core redux functionality',\n    created: new Date('2020-02-18T17:37:46.248Z'),\n    slug: 'redux-tooling',\n    tags: [{ name: 'redux', color: 'red' }],\n    important: false\n  }\n];\n\nconst manageTasks = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TASK:\n      if (action.oldSlug) {\n        const foundAt = state.findIndex(\n          (x) => x.slug === action.oldSlug\n        );\n        return [\n          ...state.slice(0, foundAt),\n          action.task,\n          ...state.slice(foundAt + 1)\n        ];\n      }\n      return state.concat(action.task);\n    case REMOVE_TASK:\n      return state.filter((x) => x.slug !== action.task.slug);\n    default:\n      return state;\n  }\n};\n\nexport default manageTasks;\n","import { UPDATE_TRASH, REMOVE_TRASH } from '../actions';\n\nconst initialState = [\n  {\n    title: 'Node, Express, and MongoDB',\n    content:\n      'In a full-scale app these would be essential, but this app is focused on front-end, so redux is handling the data in a nonpermanent way. These may be incorporated if I refactor this to a full stack project later on.',\n    created: new Date('2020-06-21T17:37:46.248Z'),\n    slug: 'node-express-and-mongodb',\n    tags: [],\n    important: true\n  },\n  {\n    title: 'Material UI',\n    content:\n      'Material UI is another excellent choice for a UI library, but some key features of Semantic UI, such as the included icon sets and nicely designed accordion, made that the preferable choice.',\n    created: new Date('2020-05-20T17:35:21.449Z'),\n    slug: 'material-ui',\n    tags: [{ name: 'UI-library', color: 'blue' }],\n    important: false\n  },\n  {\n    title: 'React-Bootstrap',\n    content:\n      'Bootstrap was considered, but the clean aesthetic of semantic UI won out',\n    created: new Date('2020-04-18T17:37:46.248Z'),\n    slug: 'react-bootstrap',\n    tags: [{ name: 'UI-library', color: 'blue' }],\n    important: false\n  }\n];\n\nconst manageTrash = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_TRASH:\n      return state.concat(action.task);\n    case REMOVE_TRASH:\n      return state.filter((x) => x.slug !== action.task.slug);\n    default:\n      return state;\n  }\n};\n\nexport default manageTrash;\n","import { CREATE_TAG, REMOVE_TAG } from '../actions';\n\nconst initialState = [\n  {\n    name: 'redux',\n    color: 'red'\n  },\n  {\n    name: 'UI-library',\n    color: 'blue'\n  }\n];\n\nconst manageTags = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_TAG:\n      return state.concat(action.tag);\n    case REMOVE_TAG:\n      return state.filter((x) => x.name !== action.tag.name);\n    default:\n      return state;\n  }\n};\n\nexport default manageTags;\n","import { TOGGLE_IMPORTANT } from '../actions';\n\nconst filterImportant = (state = false, action) => {\n  switch (action.type) {\n    case TOGGLE_IMPORTANT:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default filterImportant;\n","import { UPDATE_TAG_FILTER } from '../actions';\n\nconst filterTags = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_TAG_FILTER:\n      const currentlyListed = state.find((x) => x === action.tagName);\n      if (currentlyListed) {\n        return state.filter((x) => x !== action.tagName);\n      } else {\n        return [...state, action.tagName];\n      }\n    default:\n      return state;\n  }\n};\n\nexport default filterTags;\n","import {\n  SORT_BY_NEWEST,\n  SORT_BY_OLDEST,\n  SORT_BY_ABC,\n  SORT_BY_TAGS\n} from '../actions';\n\nconst sortOptions = (state = SORT_BY_NEWEST, action) => {\n  switch (action.type) {\n    case SORT_BY_NEWEST:\n      return SORT_BY_NEWEST;\n    case SORT_BY_OLDEST:\n      return SORT_BY_OLDEST;\n    case SORT_BY_ABC:\n      return SORT_BY_ABC;\n    case SORT_BY_TAGS:\n      return SORT_BY_TAGS;\n    default:\n      return state;\n  }\n};\n\nexport default sortOptions;\n","import { TOGGLE_TAG_VISIBILITY } from '../actions';\n\nconst showTags = (state = true, action) => {\n  switch (action.type) {\n    case TOGGLE_TAG_VISIBILITY:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default showTags;\n","import { TOGGLE_LOGIN } from '../actions';\n\nconst loggedIn = (state = true, action) => {\n  switch (action.type) {\n    case TOGGLE_LOGIN:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default loggedIn;\n","import { TOGGLE_SHOW_ALL } from '../actions';\n\nconst showAll = (state = false, action) => {\n  switch (action.type) {\n    case TOGGLE_SHOW_ALL:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default showAll;\n","import { TOGGLE_TAG_COLORS } from '../actions';\n\nconst useTagColors = (state = false, action) => {\n  switch (action.type) {\n    case TOGGLE_TAG_COLORS:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default useTagColors;\n","import manageTasks from './manageTasks';\nimport manageTrash from './manageTrash';\nimport manageTags from './manageTags';\nimport filterImportant from './filterImportant';\nimport filterTags from './filterTags';\nimport sortOptions from './sortOptions';\nimport showTags from './showTags';\nimport loggedIn from './manageLogin';\nimport showAll from './showAll';\nimport useTagColors from './useTagColors';\n\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  tasks: manageTasks,\n  trash: manageTrash,\n  tags: manageTags,\n  filterImportant,\n  filterTags,\n  sortOptions,\n  showTags,\n  loggedIn,\n  showAll,\n  useTagColors\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}